# Makefile.in generated by automake 1.11 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/planner
pkgincludedir = $(includedir)/planner
pkglibdir = $(libdir)/planner
pkglibexecdir = $(libexecdir)/planner
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
#am__append_1 = $(PYTHON_INCLUDES)
bin_PROGRAMS = planner$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(plugindir)" "$(DESTDIR)$(bindir)"
LTLIBRARIES = $(noinst_LTLIBRARIES) $(plugin_LTLIBRARIES)
am__DEPENDENCIES_1 =
#libeds_plugin_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__libeds_plugin_la_SOURCES_DIST = planner-eds-plugin.c
#am_libeds_plugin_la_OBJECTS =  \
#	libeds_plugin_la-planner-eds-plugin.lo
libeds_plugin_la_OBJECTS = $(am_libeds_plugin_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libeds_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libeds_plugin_la_CFLAGS) $(CFLAGS) \
	$(libeds_plugin_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libeds_plugin_la_rpath = -rpath $(plugindir)
libhtml_plugin_la_LIBADD =
am_libhtml_plugin_la_OBJECTS = planner-html-plugin.lo
libhtml_plugin_la_OBJECTS = $(am_libhtml_plugin_la_OBJECTS)
libhtml_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libhtml_plugin_la_LDFLAGS) $(LDFLAGS) \
	-o $@
libmsp_plugin_la_LIBADD =
am_libmsp_plugin_la_OBJECTS = planner-msp-plugin.lo
libmsp_plugin_la_OBJECTS = $(am_libmsp_plugin_la_OBJECTS)
libmsp_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libmsp_plugin_la_LDFLAGS) $(LDFLAGS) \
	-o $@
libplannerapp_la_LIBADD =
am__objects_1 = planner-marshal.lo
am__objects_2 = planner-gantt-background.lo planner-gantt-header.lo \
	planner-gantt-model.lo planner-task-tree.lo \
	planner-task-popup.lo planner-relation-arrow.lo \
	planner-gantt-chart.lo planner-gantt-print.lo \
	planner-gantt-row.lo planner-gantt-view.lo \
	planner-task-view.lo
am__objects_3 = planner-resource-view.lo
am__objects_4 = planner-usage-view.lo planner-usage-chart.lo \
	planner-usage-model.lo planner-usage-row.lo \
	planner-usage-tree.lo
am_libplannerapp_la_OBJECTS = $(am__objects_1) eel-canvas-rect.lo \
	dummy-canvas-item.lo planner-application.lo \
	planner-pert-chart.lo planner-pertchartnode.lo planner-simulat.lo \
	planner-assignment-model.lo planner-conf-gconf.lo \
	planner-calendar.lo planner-calendar-dialog.lo \
	planner-calendar-selector.lo planner-canvas-line.lo \
	planner-cell-renderer-date.lo planner-cell-renderer-list.lo \
	planner-cell-renderer-popup.lo planner-cmd-manager.lo \
	planner-column-dialog.lo planner-day-type-dialog.lo \
	planner-default-week-dialog.lo planner-format.lo \
	planner-group-dialog.lo planner-group-model.lo \
	planner-qualification-dialog.lo planner-qualification-model.lo \
	planner-list-model.lo planner-phase-dialog.lo \
	planner-plugin.lo planner-plugin-loader.lo \
	planner-popup-button.lo planner-popup-entry.lo \
	planner-predecessor-model.lo planner-print-dialog.lo \
	planner-print-job.lo planner-project-properties.lo \
	planner-property-dialog.lo planner-property-model.lo \
	planner-resource-cmd.lo planner-resource-dialog.lo \
	planner-resource-input-dialog.lo planner-scale-utils.lo \
	planner-sidebar.lo planner-table-print-sheet.lo \
	planner-task-cmd.lo planner-task-date-widget.lo \
	planner-task-dialog.lo planner-task-input-dialog.lo \
	planner-show-view.lo planner-prob-event-dialog.lo\
	planner-review-view.lo \
	planner-util.lo planner-view.lo planner-window.lo \
	planner-working-time-dialog.lo $(am__objects_2) \
	$(am__objects_3) $(am__objects_4)
libplannerapp_la_OBJECTS = $(am_libplannerapp_la_OBJECTS)
#libpython_plugin_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__libpython_plugin_la_SOURCES_DIST = planner-python-plugin.c
#am_libpython_plugin_la_OBJECTS = libpython_plugin_la-planner-python-plugin.lo
libpython_plugin_la_OBJECTS = $(am_libpython_plugin_la_OBJECTS)
libpython_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libpython_plugin_la_CFLAGS) $(CFLAGS) \
	$(libpython_plugin_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libpython_plugin_la_rpath = -rpath \
#	$(plugindir)
#libsql_plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__libsql_plugin_la_SOURCES_DIST = planner-sql-plugin.c
#am_libsql_plugin_la_OBJECTS =  \
#	libsql_plugin_la-planner-sql-plugin.lo
libsql_plugin_la_OBJECTS = $(am_libsql_plugin_la_OBJECTS)
libsql_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libsql_plugin_la_CFLAGS) $(CFLAGS) \
	$(libsql_plugin_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libsql_plugin_la_rpath = -rpath $(plugindir)
libxmlplanner_plugin_la_LIBADD =
am_libxmlplanner_plugin_la_OBJECTS = planner-xml-planner-plugin.lo
libxmlplanner_plugin_la_OBJECTS =  \
	$(am_libxmlplanner_plugin_la_OBJECTS)
libxmlplanner_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libxmlplanner_plugin_la_LDFLAGS) \
	$(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_planner_OBJECTS = planner-main.$(OBJEXT)
planner_OBJECTS = $(am_planner_OBJECTS)
planner_DEPENDENCIES = libplannerapp.la \
	$(top_builddir)/libplanner/libplanner-1.la \
	$(am__DEPENDENCIES_1)
planner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(planner_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libeds_plugin_la_SOURCES) $(libhtml_plugin_la_SOURCES) \
	$(libmsp_plugin_la_SOURCES) $(libplannerapp_la_SOURCES) \
	$(libpython_plugin_la_SOURCES) $(libsql_plugin_la_SOURCES) \
	$(libxmlplanner_plugin_la_SOURCES) $(planner_SOURCES)
DIST_SOURCES = $(am__libeds_plugin_la_SOURCES_DIST) \
	$(libhtml_plugin_la_SOURCES) $(libmsp_plugin_la_SOURCES) \
	$(libplannerapp_la_SOURCES) \
	$(am__libpython_plugin_la_SOURCES_DIST) \
	$(am__libsql_plugin_la_SOURCES_DIST) \
	$(libxmlplanner_plugin_la_SOURCES) $(planner_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/zms/workspace/Plannerbinxy/missing --run aclocal-1.11
ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS}
ALL_LINGUAS = 
AMTAR = ${SHELL} /home/zms/workspace/Plannerbinxy/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/zms/workspace/Plannerbinxy/missing --run autoconf
AUTOHEADER = ${SHELL} /home/zms/workspace/Plannerbinxy/missing --run autoheader
AUTOMAKE = ${SHELL} /home/zms/workspace/Plannerbinxy/missing --run automake-1.11
AWK = mawk
CATALOGS = 
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EDS_BACKEND_CFLAGS = 
EDS_BACKEND_LIBS = 
EDS_CFLAGS = 
EDS_LIBS = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GCONFTOOL = /usr/bin/gconftool-2
GCONF_SCHEMA_CONFIG_SOURCE = xml:merged:/etc/gconf/gconf.xml.defaults
GCONF_SCHEMA_FILE_DIR = $(sysconfdir)/gconf/schemas
GDA_CFLAGS = 
GDA_LIBS = 
GDA_VER = 
GETTEXT_PACKAGE = planner
GLIB_CFLAGS = 
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = 
GLIB_MKENUMS = 
GMOFILES = 
GMSGFMT = /usr/bin/msgfmt
GOBJECT_QUERY = 
GREP = /bin/grep
GTKDOC_CHECK = 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBPLANNER_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/libxml2  
LIBPLANNER_LIBS = -Wl,--export-dynamic -pthread -lxml2 -lgobject-2.0 -lgmodule-2.0 -lrt -lglib-2.0  
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/zms/workspace/Plannerbinxy/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = planner
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PLANNER_CFLAGS = -pthread -DORBIT2=1 -D_REENTRANT -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/gtk-2.0 -I/usr/lib/i386-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/libgnomecanvas-2.0 -I/usr/include/gail-1.0 -I/usr/include/libart-2.0 -I/usr/include/libgnomeui-2.0 -I/usr/include/gconf/2 -I/usr/include/gnome-keyring-1 -I/usr/include/libgnome-2.0 -I/usr/include/libbonoboui-2.0 -I/usr/include/gnome-vfs-2.0 -I/usr/lib/i386-linux-gnu/gnome-vfs-2.0/include -I/usr/include/dbus-1.0 -I/usr/lib/i386-linux-gnu/dbus-1.0/include -I/usr/include/orbit-2.0 -I/usr/include/libbonobo-2.0 -I/usr/include/bonobo-activation-2.0 -I/usr/include/libxml2 -I/usr/include/libglade-2.0  
PLANNER_LIBS = -Wl,--export-dynamic -pthread -lgnomeui-2 -lSM -lICE -lbonoboui-2 -lgnomevfs-2 -lgnomecanvas-2 -lgnome-2 -lpopt -lbonobo-2 -lbonobo-activation -lORBit-2 -lart_lgpl_2 -lgthread-2.0 -lgmodule-2.0 -lrt -lglade-2.0 -lgtk-x11-2.0 -lxml2 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgconf-2 -lglib-2.0  
POFILES = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYGOBJECT_CODEGEN = 
PYGTK_CFLAGS = 
PYGTK_DEFSDIR = 
PYGTK_LIBS = 
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_INCLUDES = -I/usr/include/python2.7
PYTHON_LDFLAGS = -L/usr/lib -lpython2.7
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
RANLIB = ranlib
SCROLLKEEPER_CONFIG = /usr/bin/scrollkeeper-config
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
UPDATE_DESKTOP_DATABASE = /usr/bin/update-desktop-database
UPDATE_MIME_DATABASE = /usr/bin/update-mime-database
USE_NLS = yes
VERSION = 0.14.6
WARN_CFLAGS = 
XGETTEXT = /usr/bin/xgettext
XSLT_CFLAGS = -I/usr/include/libxml2  
XSLT_LIBS = -lexslt -lxslt -lxml2  
abs_builddir = /home/zms/workspace/Plannerbinxy/src
abs_srcdir = /home/zms/workspace/Plannerbinxy/src
abs_top_builddir = /home/zms/workspace/Plannerbinxy
abs_top_srcdir = /home/zms/workspace/Plannerbinxy
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
extensiondir = 
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/zms/workspace/Plannerbinxy/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/planner
pkgpythondir = ${pythondir}/planner

#
# Plugins
#
plugindir = $(libdir)/planner/plugins
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/dist-packages
pythondir = ${prefix}/lib/python2.7/dist-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/src -I$(top_builddir) \
	-I$(top_builddir)/src $(PLANNER_CFLAGS) $(WARN_CFLAGS) \
	-DG_LOG_DOMAIN=\"Planner\" -DPREFIX=\""$(prefix)"\" \
	-DSYSCONFDIR=\""$(sysconfdir)"\" -DLIBDIR=\""$(libdir)"\" \
	-DDATADIR=\""$(datadir)"\" $(am__append_1)
planner_SOURCES = \
	planner-main.c

planner_LDFLAGS = -export-dynamic
planner_LDADD = \
	libplannerapp.la \
	$(top_builddir)/libplanner/libplanner-1.la \
	$(PLANNER_LIBS)


# Create a convenience library to link our tests against
noinst_LTLIBRARIES = libplannerapp.la
libplannerapp_la_SOURCES = \
	$(built_sources)		\
	eel-canvas-rect.c		\
	eel-canvas-rect.h		\
	dummy-canvas-item.c		\
	dummy-canvas-item.h		\
	planner-application.c		\
	planner-application.h		\
	planner-assignment-model.c	\
	planner-assignment-model.h	\
	planner-conf.h                  \
	planner-conf-gconf.c            \
	planner-calendar.c		\
	planner-calendar-dialog.c	\
	planner-calendar-dialog.h	\
	planner-calendar.h		\
	planner-calendar-selector.c	\
	planner-calendar-selector.h	\
	planner-canvas-line.c		\
	planner-canvas-line.h		\
	planner-cell-renderer-date.c	\
	planner-cell-renderer-date.h	\
	planner-cell-renderer-list.c	\
	planner-cell-renderer-list.h	\
	planner-cell-renderer-popup.c	\
	planner-cell-renderer-popup.h	\
	planner-cmd-manager.c		\
	planner-cmd-manager.h		\
	planner-column-dialog.c		\
	planner-column-dialog.h		\
	planner-day-type-dialog.c	\
	planner-day-type-dialog.h	\
	planner-default-week-dialog.c	\
	planner-default-week-dialog.h	\
	planner-format.c		\
	planner-format.h		\
	planner-group-dialog.c		\
	planner-group-dialog.h		\
	planner-group-model.c		\
	planner-group-model.h		\
	planner-qualification-dialog.c		\
	planner-qualification-dialog.h		\
	planner-qualification-model.c		\
	planner-qualification-model.h		\
	planner-list-model.c		\
	planner-list-model.h		\
	planner-pert-chart.c		\
	planner-pert-chart.h		\
	planner-pertchartnode.h		\
	planner-pertchartnode.c		\
	planner-phase-dialog.c		\
	planner-phase-dialog.h		\
	planner-plugin.c		\
	planner-plugin.h		\
	planner-plugin-loader.c		\
	planner-plugin-loader.h		\
	planner-popup-button.c		\
	planner-popup-button.h		\
	planner-popup-entry.c		\
	planner-popup-entry.h		\
	planner-predecessor-model.c	\
	planner-predecessor-model.h	\
	planner-print-dialog.c		\
	planner-print-dialog.h		\
	planner-print-job.c		\
	planner-print-job.h		\
	planner-project-properties.c	\
	planner-project-properties.h	\
	planner-property-dialog.c	\
	planner-property-dialog.h	\
	planner-property-model.c	\
	planner-property-model.h	\
	planner-resource-cmd.c		\
	planner-resource-cmd.h		\
	planner-resource-dialog.c	\
	planner-resource-dialog.h	\
	planner-resource-input-dialog.c	\
	planner-resource-input-dialog.h	\
	planner-scale-utils.c		\
	planner-scale-utils.h		\
	planner-sidebar.c		\
	planner-sidebar.h		\
	planner-table-print-sheet.c	\
	planner-table-print-sheet.h	\
	planner-task-cmd.c		\
	planner-task-cmd.h		\
	planner-task-date-widget.c	\
	planner-task-date-widget.h	\
	planner-task-dialog.c		\
	planner-task-dialog.h		\
	planner-task-input-dialog.c	\
	planner-task-input-dialog.h	\
	planner-util.c			\
	planner-util.h			\
	planner-view.c			\
	planner-view.h			\
	planner-window.c		\
	planner-window.h		\
	planner-working-time-dialog.c	\
	planner-working-time-dialog.h	\
	planner-simulat.c		\
	planner-simulat.h		\
	valgrind.h			\
	$(gantt_task_source)		\
	$(task_source)			\
	$(resource_source)		\
	$(usage_source)

gantt_task_source = \
	planner-gantt-background.c	\
	planner-gantt-background.h	\
	planner-gantt-header.c		\
	planner-gantt-header.h		\
	planner-gantt-model.c		\
	planner-gantt-model.h		\
	planner-task-tree.c		\
	planner-task-tree.h		\
	planner-task-popup.c 		\
	planner-task-popup.h		\
	planner-relation-arrow.c	\
	planner-relation-arrow.h	\
	planner-gantt-chart.c		\
	planner-gantt-chart.h		\
	planner-gantt-print.c		\
	planner-gantt-print.h		\
	planner-gantt-row.c		\
	planner-gantt-row.h		\
	planner-gantt-view.c		\
	planner-gantt-view.h		\
	planner-task-view.c		\
	planner-task-view.h		\
	planner-prob-event-dialog.c	\
	planner-prob-event-dialog.h	\
	planner-show-view.c		\
	planner-show-view.h		\
	planner-review-view.c		\
	planner-review-view.h		

resource_source = \
	planner-resource-view.c		\
	planner-resource-view.h

usage_source = \
	planner-usage-view.c		\
	planner-usage-view.h		\
	planner-usage-chart.c		\
	planner-usage-chart.h		\
	planner-usage-model.c		\
	planner-usage-model.h		\
	planner-usage-row.c		\
	planner-usage-row.h		\
	planner-usage-tree.c		\
	planner-usage-tree.h

#sql_plugin = libsql-plugin.la
#libsql_plugin_la_SOURCES = planner-sql-plugin.c
#libsql_plugin_la_LIBADD = $(GDA_LIBS)
#libsql_plugin_la_CFLAGS = $(GDA_CFLAGS) -DGDA_VERSION=
#libsql_plugin_la_LDFLAGS = -avoid-version -module
#python_plugin = libpython-plugin.la
#libpython_plugin_la_SOURCES = planner-python-plugin.c
#libpython_plugin_la_LDFLAGS = -avoid-version -module
#libpython_plugin_la_LIBADD = $(PYTHON_LDFLAGS)
#libpython_plugin_la_CFLAGS = $(PYGTK_CFLAGS)
#eds_plugin = libeds-plugin.la
#libeds_plugin_la_SOURCES = planner-eds-plugin.c
#libeds_plugin_la_LDFLAGS = -avoid-version -module
#libeds_plugin_la_LIBADD = $(EDS_LIBS)
#libeds_plugin_la_CFLAGS = $(EDS_CFLAGS)
plugin_LTLIBRARIES = \
	libhtml-plugin.la		\
	libxmlplanner-plugin.la		\
	libmsp-plugin.la		\
	$(sql_plugin)			\
	$(python_plugin)		\
	$(eds_plugin)

libhtml_plugin_la_SOURCES = planner-html-plugin.c
libhtml_plugin_la_LDFLAGS = -avoid-version -module
libxmlplanner_plugin_la_SOURCES = planner-xml-planner-plugin.c
libxmlplanner_plugin_la_LDFLAGS = -avoid-version -module
libmsp_plugin_la_SOURCES = planner-msp-plugin.c
libmsp_plugin_la_LDFLAGS = -avoid-version -module

# do not use BUILT_SOURCES because of weird semantics
# i *think* these should actually be stamp-* files
built_sources = planner-marshal.h planner-marshal.c
EXTRA_DIST = planner-marshal.list	\
	     planner-util-win32.c

CLEANFILES = $(built_sources)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-pluginLTLIBRARIES: $(plugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(plugindir)" || $(MKDIR_P) "$(DESTDIR)$(plugindir)"
	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(plugindir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(plugindir)"; \
	}

uninstall-pluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(plugindir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(plugindir)/$$f"; \
	done

clean-pluginLTLIBRARIES:
	-test -z "$(plugin_LTLIBRARIES)" || rm -f $(plugin_LTLIBRARIES)
	@list='$(plugin_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libeds-plugin.la: $(libeds_plugin_la_OBJECTS) $(libeds_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libeds_plugin_la_LINK) $(am_libeds_plugin_la_rpath) $(libeds_plugin_la_OBJECTS) $(libeds_plugin_la_LIBADD) $(LIBS)
libhtml-plugin.la: $(libhtml_plugin_la_OBJECTS) $(libhtml_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libhtml_plugin_la_LINK) -rpath $(plugindir) $(libhtml_plugin_la_OBJECTS) $(libhtml_plugin_la_LIBADD) $(LIBS)
libmsp-plugin.la: $(libmsp_plugin_la_OBJECTS) $(libmsp_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libmsp_plugin_la_LINK) -rpath $(plugindir) $(libmsp_plugin_la_OBJECTS) $(libmsp_plugin_la_LIBADD) $(LIBS)
libplannerapp.la: $(libplannerapp_la_OBJECTS) $(libplannerapp_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libplannerapp_la_OBJECTS) $(libplannerapp_la_LIBADD) $(LIBS)
libpython-plugin.la: $(libpython_plugin_la_OBJECTS) $(libpython_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpython_plugin_la_LINK) $(am_libpython_plugin_la_rpath) $(libpython_plugin_la_OBJECTS) $(libpython_plugin_la_LIBADD) $(LIBS)
libsql-plugin.la: $(libsql_plugin_la_OBJECTS) $(libsql_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libsql_plugin_la_LINK) $(am_libsql_plugin_la_rpath) $(libsql_plugin_la_OBJECTS) $(libsql_plugin_la_LIBADD) $(LIBS)
libxmlplanner-plugin.la: $(libxmlplanner_plugin_la_OBJECTS) $(libxmlplanner_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libxmlplanner_plugin_la_LINK) -rpath $(plugindir) $(libxmlplanner_plugin_la_OBJECTS) $(libxmlplanner_plugin_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
planner$(EXEEXT): $(planner_OBJECTS) $(planner_DEPENDENCIES) 
	@rm -f planner$(EXEEXT)
	$(AM_V_CCLD)$(planner_LINK) $(planner_OBJECTS) $(planner_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/dummy-canvas-item.Plo
include ./$(DEPDIR)/eel-canvas-rect.Plo
include ./$(DEPDIR)/libeds_plugin_la-planner-eds-plugin.Plo
include ./$(DEPDIR)/libpython_plugin_la-planner-python-plugin.Plo
include ./$(DEPDIR)/libsql_plugin_la-planner-sql-plugin.Plo
include ./$(DEPDIR)/planner-application.Plo
include ./$(DEPDIR)/planner-assignment-model.Plo
include ./$(DEPDIR)/planner-calendar-dialog.Plo
include ./$(DEPDIR)/planner-calendar-selector.Plo
include ./$(DEPDIR)/planner-calendar.Plo
include ./$(DEPDIR)/planner-canvas-line.Plo
include ./$(DEPDIR)/planner-cell-renderer-date.Plo
include ./$(DEPDIR)/planner-cell-renderer-list.Plo
include ./$(DEPDIR)/planner-cell-renderer-popup.Plo
include ./$(DEPDIR)/planner-cmd-manager.Plo
include ./$(DEPDIR)/planner-column-dialog.Plo
include ./$(DEPDIR)/planner-conf-gconf.Plo
include ./$(DEPDIR)/planner-day-type-dialog.Plo
include ./$(DEPDIR)/planner-default-week-dialog.Plo
include ./$(DEPDIR)/planner-format.Plo
include ./$(DEPDIR)/planner-gantt-background.Plo
include ./$(DEPDIR)/planner-gantt-chart.Plo
include ./$(DEPDIR)/planner-gantt-header.Plo
include ./$(DEPDIR)/planner-gantt-model.Plo
include ./$(DEPDIR)/planner-gantt-print.Plo
include ./$(DEPDIR)/planner-gantt-row.Plo
include ./$(DEPDIR)/planner-gantt-view.Plo
include ./$(DEPDIR)/planner-group-dialog.Plo
include ./$(DEPDIR)/planner-group-model.Plo
include ./$(DEPDIR)/planner-qualification-dialog.Plo
include ./$(DEPDIR)/planner-qualification-model.Plo
include ./$(DEPDIR)/planner-html-plugin.Plo
include ./$(DEPDIR)/planner-list-model.Plo
include ./$(DEPDIR)/planner-main.Po
include ./$(DEPDIR)/planner-marshal.Plo
include ./$(DEPDIR)/planner-msp-plugin.Plo
include ./$(DEPDIR)/planner-phase-dialog.Plo
include ./$(DEPDIR)/planner-plugin-loader.Plo
include ./$(DEPDIR)/planner-plugin.Plo
include ./$(DEPDIR)/planner-popup-button.Plo
include ./$(DEPDIR)/planner-popup-entry.Plo
include ./$(DEPDIR)/planner-predecessor-model.Plo
include ./$(DEPDIR)/planner-print-dialog.Plo
include ./$(DEPDIR)/planner-print-job.Plo
include ./$(DEPDIR)/planner-project-properties.Plo
include ./$(DEPDIR)/planner-property-dialog.Plo
include ./$(DEPDIR)/planner-property-model.Plo
include ./$(DEPDIR)/planner-relation-arrow.Plo
include ./$(DEPDIR)/planner-resource-cmd.Plo
include ./$(DEPDIR)/planner-resource-dialog.Plo
include ./$(DEPDIR)/planner-resource-input-dialog.Plo
include ./$(DEPDIR)/planner-resource-view.Plo
include ./$(DEPDIR)/planner-scale-utils.Plo
include ./$(DEPDIR)/planner-sidebar.Plo
include ./$(DEPDIR)/planner-table-print-sheet.Plo
include ./$(DEPDIR)/planner-task-cmd.Plo
include ./$(DEPDIR)/planner-task-date-widget.Plo
include ./$(DEPDIR)/planner-task-dialog.Plo
include ./$(DEPDIR)/planner-task-input-dialog.Plo
include ./$(DEPDIR)/planner-task-popup.Plo
include ./$(DEPDIR)/planner-task-tree.Plo
include ./$(DEPDIR)/planner-task-view.Plo
include ./$(DEPDIR)/planner-usage-chart.Plo
include ./$(DEPDIR)/planner-usage-model.Plo
include ./$(DEPDIR)/planner-usage-row.Plo
include ./$(DEPDIR)/planner-usage-tree.Plo
include ./$(DEPDIR)/planner-usage-view.Plo
include ./$(DEPDIR)/planner-util.Plo
include ./$(DEPDIR)/planner-view.Plo
include ./$(DEPDIR)/planner-window.Plo
include ./$(DEPDIR)/planner-working-time-dialog.Plo
include ./$(DEPDIR)/planner-xml-planner-plugin.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libeds_plugin_la-planner-eds-plugin.lo: planner-eds-plugin.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libeds_plugin_la_CFLAGS) $(CFLAGS) -MT libeds_plugin_la-planner-eds-plugin.lo -MD -MP -MF $(DEPDIR)/libeds_plugin_la-planner-eds-plugin.Tpo -c -o libeds_plugin_la-planner-eds-plugin.lo `test -f 'planner-eds-plugin.c' || echo '$(srcdir)/'`planner-eds-plugin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libeds_plugin_la-planner-eds-plugin.Tpo $(DEPDIR)/libeds_plugin_la-planner-eds-plugin.Plo
#	$(AM_V_CC) \
#	source='planner-eds-plugin.c' object='libeds_plugin_la-planner-eds-plugin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libeds_plugin_la_CFLAGS) $(CFLAGS) -c -o libeds_plugin_la-planner-eds-plugin.lo `test -f 'planner-eds-plugin.c' || echo '$(srcdir)/'`planner-eds-plugin.c

libpython_plugin_la-planner-python-plugin.lo: planner-python-plugin.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpython_plugin_la_CFLAGS) $(CFLAGS) -MT libpython_plugin_la-planner-python-plugin.lo -MD -MP -MF $(DEPDIR)/libpython_plugin_la-planner-python-plugin.Tpo -c -o libpython_plugin_la-planner-python-plugin.lo `test -f 'planner-python-plugin.c' || echo '$(srcdir)/'`planner-python-plugin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpython_plugin_la-planner-python-plugin.Tpo $(DEPDIR)/libpython_plugin_la-planner-python-plugin.Plo
#	$(AM_V_CC) \
#	source='planner-python-plugin.c' object='libpython_plugin_la-planner-python-plugin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpython_plugin_la_CFLAGS) $(CFLAGS) -c -o libpython_plugin_la-planner-python-plugin.lo `test -f 'planner-python-plugin.c' || echo '$(srcdir)/'`planner-python-plugin.c

libsql_plugin_la-planner-sql-plugin.lo: planner-sql-plugin.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsql_plugin_la_CFLAGS) $(CFLAGS) -MT libsql_plugin_la-planner-sql-plugin.lo -MD -MP -MF $(DEPDIR)/libsql_plugin_la-planner-sql-plugin.Tpo -c -o libsql_plugin_la-planner-sql-plugin.lo `test -f 'planner-sql-plugin.c' || echo '$(srcdir)/'`planner-sql-plugin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsql_plugin_la-planner-sql-plugin.Tpo $(DEPDIR)/libsql_plugin_la-planner-sql-plugin.Plo
#	$(AM_V_CC) \
#	source='planner-sql-plugin.c' object='libsql_plugin_la-planner-sql-plugin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsql_plugin_la_CFLAGS) $(CFLAGS) -c -o libsql_plugin_la-planner-sql-plugin.lo `test -f 'planner-sql-plugin.c' || echo '$(srcdir)/'`planner-sql-plugin.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(plugindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-pluginLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pluginLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-pluginLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-pluginLTLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pluginLTLIBRARIES \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-pluginLTLIBRARIES


planner-marshal.h: Makefile.am planner-marshal.list
	$(GLIB_GENMARSHAL) --prefix=planner_marshal $(srcdir)/planner-marshal.list --header > xgen-gmh \
	&& (cmp -s xgen-gmh planner-marshal.h || cp xgen-gmh planner-marshal.h) \
	&& rm -f xgen-gmh xgen-gmh~

planner-marshal.c: Makefile.am planner-marshal.list
	(echo "#include \"planner-marshal.h\""; $(GLIB_GENMARSHAL) --prefix=planner_marshal $(srcdir)/planner-marshal.list --body) > xgen-gmc \
	&& cp xgen-gmc planner-marshal.c \
	&& rm -f xgen-gmc xgen-gmc~

$(libplannerapp_la_OBJECTS): $(built_sources)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
