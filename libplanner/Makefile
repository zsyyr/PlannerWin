# Makefile.in generated by automake 1.11 from Makefile.am.
# libplanner/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/planner
pkgincludedir = $(includedir)/planner
pkglibdir = $(libdir)/planner
pkglibexecdir = $(libexecdir)/planner
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = libplanner
DIST_COMMON = $(libplannerinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(filemoduledir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(storagemoduledir)" \
	"$(DESTDIR)$(libplannerincludedir)"
LTLIBRARIES = $(filemodule_LTLIBRARIES) $(lib_LTLIBRARIES) \
	$(storagemodule_LTLIBRARIES)
libmrp_xml_la_DEPENDENCIES = libplanner-1.la
am_libmrp_xml_la_OBJECTS = libmrp_xml_la-mrp-xml.lo \
	libmrp_xml_la-mrp-old-xml.lo
libmrp_xml_la_OBJECTS = $(am_libmrp_xml_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libmrp_xml_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libmrp_xml_la_CFLAGS) \
	$(CFLAGS) $(libmrp_xml_la_LDFLAGS) $(LDFLAGS) -o $@
am__DEPENDENCIES_1 =
libmrp_xsl_la_DEPENDENCIES = $(am__DEPENDENCIES_1) libplanner-1.la
am_libmrp_xsl_la_OBJECTS = libmrp_xsl_la-mrp-xsl.lo
libmrp_xsl_la_OBJECTS = $(am_libmrp_xsl_la_OBJECTS)
libmrp_xsl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libmrp_xsl_la_CFLAGS) \
	$(CFLAGS) $(libmrp_xsl_la_LDFLAGS) $(LDFLAGS) -o $@
libplanner_1_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_1 = mrp-marshal.lo
am_libplanner_1_la_OBJECTS = $(am__objects_1) mrp-application.lo \
	mrp-assignment.lo mrp-calendar.lo mrp-day.lo mrp-group.lo \
	mrp-object.lo mrp-file-module.lo mrp-project.lo mrp-qualification.lo\
	mrp-resource.lo mrp-storage-module.lo mrp-group-assignment.lo\
	mrp-storage-module-factory.lo mrp-task-manager.lo mrp-task.lo \
	mrp-relation.lo mrp-types.lo mrp-property.lo mrp-time.lo \
	mrp-error.lo mrp-paths-gnome.lo
libplanner_1_la_OBJECTS = $(am_libplanner_1_la_OBJECTS)
libstorage_mrproject_1_la_DEPENDENCIES = libplanner-1.la
am_libstorage_mrproject_1_la_OBJECTS = mrp-storage-mrproject.lo \
	mrp-parser.lo
libstorage_mrproject_1_la_OBJECTS =  \
	$(am_libstorage_mrproject_1_la_OBJECTS)
libstorage_mrproject_1_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libstorage_mrproject_1_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#libstorage_sql_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	libplanner-1.la
am__libstorage_sql_la_SOURCES_DIST = mrp-storage-sql.c \
	mrp-storage-sql.h mrp-sql.c mrp-sql.h
#am_libstorage_sql_la_OBJECTS =  \
#	libstorage_sql_la-mrp-storage-sql.lo \
#	libstorage_sql_la-mrp-sql.lo
libstorage_sql_la_OBJECTS = $(am_libstorage_sql_la_OBJECTS)
libstorage_sql_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libstorage_sql_la_CFLAGS) $(CFLAGS) \
	$(libstorage_sql_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libstorage_sql_la_rpath = -rpath $(storagemoduledir)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libmrp_xml_la_SOURCES) $(libmrp_xsl_la_SOURCES) \
	$(libplanner_1_la_SOURCES) \
	$(libstorage_mrproject_1_la_SOURCES) \
	$(libstorage_sql_la_SOURCES)
DIST_SOURCES = $(libmrp_xml_la_SOURCES) $(libmrp_xsl_la_SOURCES) \
	$(libplanner_1_la_SOURCES) \
	$(libstorage_mrproject_1_la_SOURCES) \
	$(am__libstorage_sql_la_SOURCES_DIST)
HEADERS = $(libplannerinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/zms/workspace/Plannerbinxy/missing --run aclocal-1.11
ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS}
ALL_LINGUAS = 
AMTAR = ${SHELL} /home/zms/workspace/Plannerbinxy/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/zms/workspace/Plannerbinxy/missing --run autoconf
AUTOHEADER = ${SHELL} /home/zms/workspace/Plannerbinxy/missing --run autoheader
AUTOMAKE = ${SHELL} /home/zms/workspace/Plannerbinxy/missing --run automake-1.11
AWK = mawk
CATALOGS = 
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EDS_BACKEND_CFLAGS = 
EDS_BACKEND_LIBS = 
EDS_CFLAGS = 
EDS_LIBS = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GCONFTOOL = /usr/bin/gconftool-2
GCONF_SCHEMA_CONFIG_SOURCE = xml:merged:/etc/gconf/gconf.xml.defaults
GCONF_SCHEMA_FILE_DIR = $(sysconfdir)/gconf/schemas
GDA_CFLAGS = 
GDA_LIBS = 
GDA_VER = 
GETTEXT_PACKAGE = planner
GLIB_CFLAGS = 
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = 
GLIB_MKENUMS = 
GMOFILES = 
GMSGFMT = /usr/bin/msgfmt
GOBJECT_QUERY = 
GREP = /bin/grep
GTKDOC_CHECK = 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBPLANNER_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/libxml2  
LIBPLANNER_LIBS = -Wl,--export-dynamic -pthread -lxml2 -lgobject-2.0 -lgmodule-2.0 -lrt -lglib-2.0  
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/zms/workspace/Plannerbinxy/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = planner
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PLANNER_CFLAGS = -pthread -DORBIT2=1 -D_REENTRANT -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/gtk-2.0 -I/usr/lib/i386-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/libgnomecanvas-2.0 -I/usr/include/gail-1.0 -I/usr/include/libart-2.0 -I/usr/include/libgnomeui-2.0 -I/usr/include/gconf/2 -I/usr/include/gnome-keyring-1 -I/usr/include/libgnome-2.0 -I/usr/include/libbonoboui-2.0 -I/usr/include/gnome-vfs-2.0 -I/usr/lib/i386-linux-gnu/gnome-vfs-2.0/include -I/usr/include/dbus-1.0 -I/usr/lib/i386-linux-gnu/dbus-1.0/include -I/usr/include/orbit-2.0 -I/usr/include/libbonobo-2.0 -I/usr/include/bonobo-activation-2.0 -I/usr/include/libxml2 -I/usr/include/libglade-2.0  
PLANNER_LIBS = -Wl,--export-dynamic -pthread -lgnomeui-2 -lSM -lICE -lbonoboui-2 -lgnomevfs-2 -lgnomecanvas-2 -lgnome-2 -lpopt -lbonobo-2 -lbonobo-activation -lORBit-2 -lart_lgpl_2 -lgthread-2.0 -lgmodule-2.0 -lrt -lglade-2.0 -lgtk-x11-2.0 -lxml2 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgconf-2 -lglib-2.0  
POFILES = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYGOBJECT_CODEGEN = 
PYGTK_CFLAGS = 
PYGTK_DEFSDIR = 
PYGTK_LIBS = 
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_INCLUDES = -I/usr/include/python2.7
PYTHON_LDFLAGS = -L/usr/lib -lpython2.7
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
RANLIB = ranlib
SCROLLKEEPER_CONFIG = /usr/bin/scrollkeeper-config
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
UPDATE_DESKTOP_DATABASE = /usr/bin/update-desktop-database
UPDATE_MIME_DATABASE = /usr/bin/update-mime-database
USE_NLS = yes
VERSION = 0.14.6
WARN_CFLAGS = 
XGETTEXT = /usr/bin/xgettext
XSLT_CFLAGS = -I/usr/include/libxml2  
XSLT_LIBS = -lexslt -lxslt -lxml2  
abs_builddir = /home/zms/workspace/Plannerbinxy/libplanner
abs_srcdir = /home/zms/workspace/Plannerbinxy/libplanner
abs_top_builddir = /home/zms/workspace/Plannerbinxy
abs_top_srcdir = /home/zms/workspace/Plannerbinxy
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
extensiondir = 
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/zms/workspace/Plannerbinxy/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/planner
pkgpythondir = ${pythondir}/planner
plugindir = 
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/dist-packages
pythondir = ${prefix}/lib/python2.7/dist-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
INCLUDES = \
	-I$(top_srcdir) \
	-I$(top_srcdir)/libplanner \
	-I$(top_builddir) \
	-I$(top_builddir)/libplanner \
	$(LIBPLANNER_CFLAGS) $(WARN_CFLAGS) \
	-DSTORAGEMODULEDIR=\""$(libdir)/planner/storage-modules"\" \
	-DFILEMODULESDIR=\""$(libdir)/planner/file-modules"\" \
	-DPLUGINDIR=\""$(libdir)/planner/plugins"\"		\
	-DDATADIR=\""$(datadir)/planner"\"

lib_LTLIBRARIES = libplanner-1.la
libplanner_1_la_SOURCES = \
	$(built_sources)			\
	mrp-application.c			\
	mrp-assignment.c			\
	mrp-calendar.c				\
	mrp-day.c				\
	mrp-group-assignment.c			\
	mrp-group.c				\
	mrp-qualification.c			\
	mrp-object.c				\
	mrp-file-module.c			\
	mrp-file-module.h			\
	mrp-project.c				\
	mrp-resource.c				\
	mrp-storage-module.c			\
	mrp-storage-module-factory.c		\
	mrp-storage-module-factory.h		\
	mrp-task-manager.c			\
	mrp-task-manager.h			\
	mrp-task.c				\
	mrp-relation.c				\
	mrp-types.c				\
	mrp-private.h				\
	mrp-property.c				\
	mrp-time.c				\
	mrp-error.c				\
	mrp-paths-gnome.c

libplannerinclude_HEADERS = \
	planner.h				\
	mrp-application.h			\
	mrp-assignment.h			\
	mrp-calendar.h				\
	mrp-group-assignment.h			\
	mrp-qualification.h			\
	mrp-day.h				\
	mrp-group.h				\
	mrp-object.h				\
	mrp-project.h				\
	mrp-property.h				\
	mrp-resource.h				\
	mrp-storage-module.h			\
	mrp-task.h				\
	mrp-relation.h				\
	mrp-types.h				\
	mrp-time.h				\
	mrp-error.h				\
	mrp-paths.h

libplanner_1_la_LIBADD = $(LIBPLANNER_LIBS) -lm
libplannerincludedir = $(includedir)/planner-1.0/libplanner

#
# Storage modules
#
storagemoduledir = $(libdir)/planner/storage-modules
#sql_library = libstorage-sql.la
storagemodule_LTLIBRARIES = \
	libstorage-mrproject-1.la		\
	$(sql_library)

libstorage_mrproject_1_la_SOURCES = \
	mrp-storage-mrproject.c			\
	mrp-storage-mrproject.h			\
	mrp-parser.c				\
	mrp-parser.h

libstorage_mrproject_1_la_LDFLAGS = -avoid-version -module
libstorage_mrproject_1_la_LIBADD = libplanner-1.la
#libstorage_sql_la_SOURCES = \
#	mrp-storage-sql.c			\
#	mrp-storage-sql.h			\
#	mrp-sql.c				\
#	mrp-sql.h

#libstorage_sql_la_LDFLAGS = -avoid-version -module
#libstorage_sql_la_CFLAGS = $(GDA_CFLAGS) -DGDA_VERSION=
#libstorage_sql_la_LIBADD = $(GDA_LIBS) libplanner-1.la

#
# File modules
#
filemoduledir = $(libdir)/planner/file-modules
filemodule_LTLIBRARIES = \
	libmrp-xml.la				\
	libmrp-xsl.la

libmrp_xml_la_SOURCES = \
	mrp-xml.c				\
	mrp-old-xml.c				\
	mrp-old-xml.h

libmrp_xml_la_CFLAGS = -DDTDDIR=\""$(datadir)/planner/dtd"\"
libmrp_xml_la_LDFLAGS = -avoid-version -module
libmrp_xml_la_LIBADD = libplanner-1.la
libmrp_xsl_la_SOURCES = mrp-xsl.c
libmrp_xsl_la_CFLAGS = $(XSLT_CFLAGS) -DSTYLESHEETDIR=\""$(datadir)/planner/stylesheets"\"
libmrp_xsl_la_LDFLAGS = -avoid-version -module
libmrp_xsl_la_LIBADD = $(XSLT_LIBS) libplanner-1.la

# do not use BUILT_SOURCES because of weird semantics
# i *think* these should actually be stamp-* files
built_sources = mrp-marshal.h  mrp-marshal.c
EXTRA_DIST = mrp-marshal.list
CLEANFILES = $(built_sources)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libplanner/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libplanner/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-filemoduleLTLIBRARIES: $(filemodule_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(filemoduledir)" || $(MKDIR_P) "$(DESTDIR)$(filemoduledir)"
	@list='$(filemodule_LTLIBRARIES)'; test -n "$(filemoduledir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(filemoduledir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(filemoduledir)"; \
	}

uninstall-filemoduleLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(filemodule_LTLIBRARIES)'; test -n "$(filemoduledir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(filemoduledir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(filemoduledir)/$$f"; \
	done

clean-filemoduleLTLIBRARIES:
	-test -z "$(filemodule_LTLIBRARIES)" || rm -f $(filemodule_LTLIBRARIES)
	@list='$(filemodule_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-storagemoduleLTLIBRARIES: $(storagemodule_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(storagemoduledir)" || $(MKDIR_P) "$(DESTDIR)$(storagemoduledir)"
	@list='$(storagemodule_LTLIBRARIES)'; test -n "$(storagemoduledir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(storagemoduledir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(storagemoduledir)"; \
	}

uninstall-storagemoduleLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(storagemodule_LTLIBRARIES)'; test -n "$(storagemoduledir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(storagemoduledir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(storagemoduledir)/$$f"; \
	done

clean-storagemoduleLTLIBRARIES:
	-test -z "$(storagemodule_LTLIBRARIES)" || rm -f $(storagemodule_LTLIBRARIES)
	@list='$(storagemodule_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmrp-xml.la: $(libmrp_xml_la_OBJECTS) $(libmrp_xml_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libmrp_xml_la_LINK) -rpath $(filemoduledir) $(libmrp_xml_la_OBJECTS) $(libmrp_xml_la_LIBADD) $(LIBS)
libmrp-xsl.la: $(libmrp_xsl_la_OBJECTS) $(libmrp_xsl_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libmrp_xsl_la_LINK) -rpath $(filemoduledir) $(libmrp_xsl_la_OBJECTS) $(libmrp_xsl_la_LIBADD) $(LIBS)
libplanner-1.la: $(libplanner_1_la_OBJECTS) $(libplanner_1_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) -rpath $(libdir) $(libplanner_1_la_OBJECTS) $(libplanner_1_la_LIBADD) $(LIBS)
libstorage-mrproject-1.la: $(libstorage_mrproject_1_la_OBJECTS) $(libstorage_mrproject_1_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libstorage_mrproject_1_la_LINK) -rpath $(storagemoduledir) $(libstorage_mrproject_1_la_OBJECTS) $(libstorage_mrproject_1_la_LIBADD) $(LIBS)
libstorage-sql.la: $(libstorage_sql_la_OBJECTS) $(libstorage_sql_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libstorage_sql_la_LINK) $(am_libstorage_sql_la_rpath) $(libstorage_sql_la_OBJECTS) $(libstorage_sql_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libmrp_xml_la-mrp-old-xml.Plo
include ./$(DEPDIR)/libmrp_xml_la-mrp-xml.Plo
include ./$(DEPDIR)/libmrp_xsl_la-mrp-xsl.Plo
include ./$(DEPDIR)/libstorage_sql_la-mrp-sql.Plo
include ./$(DEPDIR)/libstorage_sql_la-mrp-storage-sql.Plo
include ./$(DEPDIR)/mrp-application.Plo
include ./$(DEPDIR)/mrp-assignment.Plo
include ./$(DEPDIR)/mrp-calendar.Plo
include ./$(DEPDIR)/mrp-day.Plo
include ./$(DEPDIR)/mrp-error.Plo
include ./$(DEPDIR)/mrp-file-module.Plo
include ./$(DEPDIR)/mrp-group.Plo
include ./$(DEPDIR)/mrp-marshal.Plo
include ./$(DEPDIR)/mrp-object.Plo
include ./$(DEPDIR)/mrp-parser.Plo
include ./$(DEPDIR)/mrp-paths-gnome.Plo
include ./$(DEPDIR)/mrp-project.Plo
include ./$(DEPDIR)/mrp-property.Plo
include ./$(DEPDIR)/mrp-relation.Plo
include ./$(DEPDIR)/mrp-resource.Plo
include ./$(DEPDIR)/mrp-storage-module-factory.Plo
include ./$(DEPDIR)/mrp-storage-module.Plo
include ./$(DEPDIR)/mrp-storage-mrproject.Plo
include ./$(DEPDIR)/mrp-task-manager.Plo
include ./$(DEPDIR)/mrp-task.Plo
include ./$(DEPDIR)/mrp-time.Plo
include ./$(DEPDIR)/mrp-types.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libmrp_xml_la-mrp-xml.lo: mrp-xml.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmrp_xml_la_CFLAGS) $(CFLAGS) -MT libmrp_xml_la-mrp-xml.lo -MD -MP -MF $(DEPDIR)/libmrp_xml_la-mrp-xml.Tpo -c -o libmrp_xml_la-mrp-xml.lo `test -f 'mrp-xml.c' || echo '$(srcdir)/'`mrp-xml.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmrp_xml_la-mrp-xml.Tpo $(DEPDIR)/libmrp_xml_la-mrp-xml.Plo
#	$(AM_V_CC) \
#	source='mrp-xml.c' object='libmrp_xml_la-mrp-xml.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmrp_xml_la_CFLAGS) $(CFLAGS) -c -o libmrp_xml_la-mrp-xml.lo `test -f 'mrp-xml.c' || echo '$(srcdir)/'`mrp-xml.c

libmrp_xml_la-mrp-old-xml.lo: mrp-old-xml.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmrp_xml_la_CFLAGS) $(CFLAGS) -MT libmrp_xml_la-mrp-old-xml.lo -MD -MP -MF $(DEPDIR)/libmrp_xml_la-mrp-old-xml.Tpo -c -o libmrp_xml_la-mrp-old-xml.lo `test -f 'mrp-old-xml.c' || echo '$(srcdir)/'`mrp-old-xml.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmrp_xml_la-mrp-old-xml.Tpo $(DEPDIR)/libmrp_xml_la-mrp-old-xml.Plo
#	$(AM_V_CC) \
#	source='mrp-old-xml.c' object='libmrp_xml_la-mrp-old-xml.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmrp_xml_la_CFLAGS) $(CFLAGS) -c -o libmrp_xml_la-mrp-old-xml.lo `test -f 'mrp-old-xml.c' || echo '$(srcdir)/'`mrp-old-xml.c

libmrp_xsl_la-mrp-xsl.lo: mrp-xsl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmrp_xsl_la_CFLAGS) $(CFLAGS) -MT libmrp_xsl_la-mrp-xsl.lo -MD -MP -MF $(DEPDIR)/libmrp_xsl_la-mrp-xsl.Tpo -c -o libmrp_xsl_la-mrp-xsl.lo `test -f 'mrp-xsl.c' || echo '$(srcdir)/'`mrp-xsl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmrp_xsl_la-mrp-xsl.Tpo $(DEPDIR)/libmrp_xsl_la-mrp-xsl.Plo
#	$(AM_V_CC) \
#	source='mrp-xsl.c' object='libmrp_xsl_la-mrp-xsl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmrp_xsl_la_CFLAGS) $(CFLAGS) -c -o libmrp_xsl_la-mrp-xsl.lo `test -f 'mrp-xsl.c' || echo '$(srcdir)/'`mrp-xsl.c

libstorage_sql_la-mrp-storage-sql.lo: mrp-storage-sql.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstorage_sql_la_CFLAGS) $(CFLAGS) -MT libstorage_sql_la-mrp-storage-sql.lo -MD -MP -MF $(DEPDIR)/libstorage_sql_la-mrp-storage-sql.Tpo -c -o libstorage_sql_la-mrp-storage-sql.lo `test -f 'mrp-storage-sql.c' || echo '$(srcdir)/'`mrp-storage-sql.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libstorage_sql_la-mrp-storage-sql.Tpo $(DEPDIR)/libstorage_sql_la-mrp-storage-sql.Plo
#	$(AM_V_CC) \
#	source='mrp-storage-sql.c' object='libstorage_sql_la-mrp-storage-sql.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstorage_sql_la_CFLAGS) $(CFLAGS) -c -o libstorage_sql_la-mrp-storage-sql.lo `test -f 'mrp-storage-sql.c' || echo '$(srcdir)/'`mrp-storage-sql.c

libstorage_sql_la-mrp-sql.lo: mrp-sql.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstorage_sql_la_CFLAGS) $(CFLAGS) -MT libstorage_sql_la-mrp-sql.lo -MD -MP -MF $(DEPDIR)/libstorage_sql_la-mrp-sql.Tpo -c -o libstorage_sql_la-mrp-sql.lo `test -f 'mrp-sql.c' || echo '$(srcdir)/'`mrp-sql.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libstorage_sql_la-mrp-sql.Tpo $(DEPDIR)/libstorage_sql_la-mrp-sql.Plo
#	$(AM_V_CC) \
#	source='mrp-sql.c' object='libstorage_sql_la-mrp-sql.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstorage_sql_la_CFLAGS) $(CFLAGS) -c -o libstorage_sql_la-mrp-sql.lo `test -f 'mrp-sql.c' || echo '$(srcdir)/'`mrp-sql.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libplannerincludeHEADERS: $(libplannerinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libplannerincludedir)" || $(MKDIR_P) "$(DESTDIR)$(libplannerincludedir)"
	@list='$(libplannerinclude_HEADERS)'; test -n "$(libplannerincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libplannerincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libplannerincludedir)" || exit $$?; \
	done

uninstall-libplannerincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libplannerinclude_HEADERS)'; test -n "$(libplannerincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libplannerincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libplannerincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(filemoduledir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(storagemoduledir)" "$(DESTDIR)$(libplannerincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-filemoduleLTLIBRARIES clean-generic \
	clean-libLTLIBRARIES clean-libtool \
	clean-storagemoduleLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-filemoduleLTLIBRARIES \
	install-libplannerincludeHEADERS \
	install-storagemoduleLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-filemoduleLTLIBRARIES uninstall-libLTLIBRARIES \
	uninstall-libplannerincludeHEADERS \
	uninstall-storagemoduleLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-filemoduleLTLIBRARIES clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-storagemoduleLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am \
	install-filemoduleLTLIBRARIES install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libplannerincludeHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am \
	install-storagemoduleLTLIBRARIES install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-filemoduleLTLIBRARIES \
	uninstall-libLTLIBRARIES uninstall-libplannerincludeHEADERS \
	uninstall-storagemoduleLTLIBRARIES


mrp-marshal.h: Makefile.am mrp-marshal.list
	$(GLIB_GENMARSHAL) --prefix=mrp_marshal $(srcdir)/mrp-marshal.list --header > xgen-gmh \
	&& (cmp -s xgen-gmh mrp-marshal.h || cp xgen-gmh mrp-marshal.h) \
	&& rm -f xgen-gmh xgen-gmh~

mrp-marshal.c: Makefile.am mrp-marshal.list
	(echo "#include \"mrp-marshal.h\""; $(GLIB_GENMARSHAL) --prefix=mrp_marshal $(srcdir)/mrp-marshal.list --body) > xgen-gmc \
	&& cp xgen-gmc mrp-marshal.c \
	&& rm -f xgen-gmc xgen-gmc~

$(libplanner_1_la_OBJECTS): $(built_sources)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
